

// input : 7 3
//  1 2 6 1 1 7 1    output : index:3 sum:8

// window siding technique 



                        /************* SRAVAN KUMAR **************/

#include <bits/stdc++.h>
using namespace std;
#define pb push_back
#define ll long long
#define fori(a,b) for(long long i=a;i<b;i++)
#define forj(a,b) for(long long j=a;j<b;j++)
#define fore(a,b) for(long long i=a;i<=b;i++)
#define fora(m)   for(auto i=m.begin();i!=m.end();i++)
#define sp <<" "<<
#define nl <<"\n"
#define all(x) x.begin(),x.end()
#define fast ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define l(s) s.size()

template<class T> inline void sort(T &a) { sort(all(a)); }

inline ll getn(){
	ll sign=1,num;
	char c;
	c=getchar();
	for(;c<'0'||c>'9';c=getchar())if(c=='-')sign=-1;
	for(num=0;(c>='0' && c<='9');c=getchar())num=num*10+c-'0';
	return num*sign;
}
bool oppositeSign(ll x, ll y) 
{ 
    return ((x ^ y) < 0); 
}
signed main() {
       fast;
             ll n,k;
             cin>>n>>k;
             ll a[n],ans=INT_MAX,index=0,temp=0,sum=0;
             fori(0,n) cin>>a[i];
             ll i=0;
             while(i<k){
             sum+=a[i];
             i++;
             }
             ans=sum;
             index=0;
             for(int i=1;i<=n-k;++i){
                     temp=sum+a[i+k-1]-a[i-1];
                     if(ans>temp){
                             index=i;
                             ans=temp;
                     }
                     sum=temp;
             }
             cout<<index+1 nl;
	return 0;
}
