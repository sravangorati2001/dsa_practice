



                 /************* SRAVAN KUMAR **************/

#include <bits/stdc++.h>
using namespace std;
#define pb push_back
#define ll long long
#define fori(a,b) for(long long i=a;i<b;i++)
#define fore(a,b) for(long long i=a;i<=b;i++)
#define sp <<" "<<
#define nl <<"\n"
#define all(x)     x.begin(),x.end()
#define fast       ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define l(s)        (int)s.size()
#define lcm(a,b)    (a*b)/__gcd(a,b)

 ll subset(ll a[], ll n, ll k)
{
    bool dp[n + 1][k*2 + 1];
    for (int i = 0; i <= n; i++)
        dp[i][0] = true;
    for (int i = 1; i <= 2*k; i++)
        dp[0][i] = false;
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= k*2; j++) {
            if (j < a[i-1])
                dp[i][j] = dp[i - 1][j];
            if (j>= a[i-1])
                dp[i][j] = (dp[i-1][j] || dp[i-1][j-a[i-1]]);
        }
    }
    for(ll j=k;j<=2*k;j++){
         if(dp[n][j]) return j;
    }
    return 0;
}

  void solve(){
       ll n,k,ans=0,sum1=0,sum2=0,sum=0,temp=0,flag=0;
           cin>>n>>k;
           ll a[n];
           fori(0,n) {
                cin>>a[i];
                sum+=a[i];
           }
           sort(a,a+n,greater<>());
           if(n==1 or sum<2*k){
                cout<<-1 nl;
                return ;
           }
           else if(sum==2*k){
                if(a[0]>k) cout<<-1 nl;
                else if(a[0]==k) cout<< n nl;
                else{
                     if(subset(a,n,k)==k) cout<<n nl;
                     else cout<< -1 nl;
                }
                return;
           }
           else if(a[0]>=k){
                ans=1;
                fori(1,n){
                     sum2+=a[i];
                     ans++;
                     if(sum2>=k){
                          cout<<ans nl;
                          return;
                     }
                }
                cout<< -1 nl;
           }
           else{
                ll i=-1;
                while(temp<2*k){
                     ++i;
                     temp+=a[i];
                }
                i++;
                sort(a,a+i);
           sum1=subset(a,i,k);
           sum2=temp-sum1;
           ans=i;
           while(sum2<k and i<n){
                sum2+=a[i];
                i++;
                ans++;
           }
          if(sum1>=k and sum2>=k) cout<< ans nl;
          else cout<<-1 nl;
           } 
  }
signed main() {
      fast;
       ll t;
       cin>>t;
       while(t--){
           solve();
       }
	return 0;
   
}
